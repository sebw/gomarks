name: Build, Push to GHCR, and Create Release

on:
  push:
    branches:
      - '**' # Trigger on pushes to any branch

jobs:
  build:
    if: contains(github.event.head_commit.message, '#build')
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to GitHub Container Registry (GHCR)
    - name: Log in to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    # Step 4: Build and push Docker image
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/gomarks:${{ github.ref_name }}
          ghcr.io/${{ github.repository_owner }}/gomarks:latest

    # Step 5: Generate the next tag (e.g., v0.1.3 -> v0.1.4)
    - name: Generate New Tag
      id: tag
      run: |
        # Get the latest tag
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "Latest Tag: $latest_tag"

        # Parse and increment the version (e.g., v0.1.3 -> v0.1.4)
        IFS='.' read -r major minor patch <<< "${latest_tag//v/}"
        new_tag="v$major.$minor.$((patch+1))"
        echo "New Tag: $new_tag"
        echo "tag=$new_tag" >> $GITHUB_ENV

    # Step 6: Push the new tag to the repository
    - name: Push New Tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag ${{ env.tag }}
        git push origin ${{ env.tag }}

    # Step 7: Create a new GitHub release
    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.tag }}
        release_name: Release ${{ env.tag }}
        body: |
          This release includes the latest Docker image:
          - **Image:** ghcr.io/${{ github.repository_owner }}/gomarks:${{ env.tag }}
          - **Latest Tag:** ghcr.io/${{ github.repository_owner }}/gomarks:latest
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
